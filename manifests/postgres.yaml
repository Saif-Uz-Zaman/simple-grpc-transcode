---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-initdb
  namespace: dev
data:
  initdb.sql: |
    create database userdb;
    create user userdb with encrypted password 'userdb';
    grant all privileges on database userdb to userdb;
    create database transactiondb;
    create user transactiondb with encrypted password 'transactiondb';
    grant all privileges on database transactiondb to transactiondb;
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: dev
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      name: tcp
  selector:
    app: postgres
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: postgres
  namespace: dev
automountServiceAccountToken: true
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      service: postgres
      app: postgres
  template:
    metadata:
      labels:
        service: postgres
        app: postgres
    spec:
      serviceAccountName: postgres
      containers:
        - name: postgres
          image: postgres:14.5
          # command:
          # - /bin/createdbs.sh
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
          volumeMounts:
            - mountPath: "/var/lib/postgresql/data"
              name: "pgdata"
            - name: configmap-volume
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: pgdata
          emptyDir: {}
        - name: configmap-volume
          configMap:
            name: postgres-initdb


